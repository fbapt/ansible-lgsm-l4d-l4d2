---
- name: Installation virt-what
  ansible.builtin.package:
    name: virt-what
    state: present
  when: not ansible_check_mode

- name: Check if is a dedicated or vm server
  ansible.builtin.shell: |
    set -o pipefail
    virt-what
  args:
    executable: /usr/bin/bash
  changed_when: false
  register: physical

- name: Install useful packages
  ansible.builtin.package:
    name: "{{ performance_useful_packages }}"
    state: present
  when: not ansible_check_mode

- name: Update gai conf to set priority ipv4 over ipv6
  ansible.builtin.replace:
    path: /etc/gai.conf
    regexp: '#precedence ::ffff:0:0/96  100'
    replace: 'precedence ::ffff:0:0/96  100'

- name: Tuned-adm profile network-latency
  ansible.builtin.command:
    cmd: tuned-adm profile network-latency
  changed_when: false
  when: physical.stdout == ""

- name: Tuned-adm profile virtual-guest
  ansible.builtin.command:
    cmd: tuned-adm profile virtual-guest
  changed_when: false
  when: physical.stdout != ""

- name: Grub disable mitigations
  ansible.builtin.copy:
    src: grub.cfg
    dest: /etc/default/grub
    owner: root
    group: root
    mode: "0644"
    backup: true
  notify: Update-grub
  when: physical.stdout == ""

- name: Copy systctl config
  ansible.builtin.copy:
    src: sysctl.conf
    dest: /etc/sysctl.d/sysctl.conf
    owner: root
    group: root
    mode: "0644"

- name: Copy hyperthreading script toggleHT
  ansible.builtin.copy:
    src: toggleHT.sh
    dest: /root/toggleHT.sh
    owner: root
    group: root
    mode: "0755"
  when: physical.stdout == ""

- name: Get physical interface name
  ansible.builtin.shell: |
    set -o pipefail
    ip -br l | awk '$1 !~ "lo|vir|wl" { print $1}'
  args:
    executable: /usr/bin/bash
  register: physical_interface
  changed_when: false

- name: Crontab configuration hyperthreading
  ansible.builtin.cron:
    name: Disable hyperthreading
    user: root
    special_time: reboot
    job: "sleep 30 && echo d | /root/toggleHT.sh"
    state: present
  when: physical.stdout == ""

- name: Crontab configuration udp performance
  ansible.builtin.cron:
    name: Enable udp gro forwarding to improve udp performance
    user: root
    special_time: reboot
    job: "sleep 30 && ethtool -K {{ physical_interface.stdout }} rx-udp-gro-forwarding on"
    state: present

- name: Crontab configuration udp throughput
  ansible.builtin.cron:
    name: Disable generic-receive-offload, generic-segmentation-offload for UDP throughput
    user: root
    special_time: reboot
    job: "sleep 35 && ethtool -K {{ physical_interface.stdout }} gro off gso off"
    state: present
